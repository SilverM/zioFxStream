[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addDefaultCommands), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addDefaultCommands, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(initialize), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(initialize, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(boot, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(writeSbtVersion, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mUpdated file /Users/leqisoon/Documents/Coding/zioFxStream/project/build.properties: set sbt.version to 1.8.0[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.8.0 (Oracle Corporation Java 18.0.1.1)[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: plugins took 73.001958ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: defsScala took 0.149208ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/leqisoon/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/leqisoon/.sbt/1.0/plugins, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 19.613167 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.resolveProject(global-plugins) took 67.983541ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/leqisoon/.sbt/1.0/plugins, plugins: List(<none>))) took 104.288791ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/leqisoon/.sbt/1.0/plugins, returning: (global-plugins)[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: loadedProjectsRaw took 129.054166ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: cleanEvalClasses took 0.432416ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit(file:/Users/leqisoon/.sbt/1.0/plugins/, ...) took 212.8025ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: load took 861.038916ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: resolveProjects took 4.06975ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: finalTransforms took 95.485833ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: config.delegates took 6.399875ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: Def.make(settings)... took 1065.586958ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: structureIndex took 255.598875ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: mkStreams took 0.80125ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading global plugins from /Users/leqisoon/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.defaultLoad until apply took 7324.530917ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 24.793125ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.002083ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/leqisoon/Documents/Coding/zioFxStream/project[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/leqisoon/Documents/Coding/zioFxStream/project, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 4.592625 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(ziofxstream-build) took 2.889083ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id ziofxstream-build, base: /Users/leqisoon/Documents/Coding/zioFxStream/project, plugins: List(<none>))) took 8.244667ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/leqisoon/Documents/Coding/zioFxStream/project, returning: (ziofxstream-build)[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 14.530542ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 0.034792ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/Users/leqisoon/Documents/Coding/zioFxStream/project/, ...) took 40.053666ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 43.879583ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 0.841959ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 20.703667ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 1.089958ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 310.310958ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 50.923792ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 0.001667ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /Users/leqisoon/Documents/Coding/zioFxStream/project[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: plugins took 1188.820125ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: defsScala took 0.002167ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/leqisoon/Documents/Coding/zioFxStream[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: mkEval took 3.963ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/leqisoon/Documents/Coding/zioFxStream, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 5.755 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project ziofxstream from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.resolveProject(ziofxstream) took 16.429208ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadTransitive: finalizeProject(Project(id ziofxstream, base: /Users/leqisoon/Documents/Coding/zioFxStream, plugins: List(<none>))) took 24.4165ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/leqisoon/Documents/Coding/zioFxStream, returning: (ziofxstream)[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: loadedProjectsRaw took 5803.676625ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: cleanEvalClasses took 7.222625ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.loadUnit(file:/Users/leqisoon/Documents/Coding/zioFxStream/, ...) took 7000.986833ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: load took 7008.33775ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: resolveProjects took 0.536208ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: finalTransforms took 21.037542ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: config.delegates took 4.149541ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: Def.make(settings)... took 251.211834ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: structureIndex took 37.817708ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: mkStreams took 0.002042ms[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to zio-quickstart-restful-webservice (in build file:/Users/leqisoon/Documents/Coding/zioFxStream/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(notifyUsersAboutShell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(iflast shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(run, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / run[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 9 Scala sources to /Users/leqisoon/Documents/Coding/zioFxStream/target/scala-3.1.3/classes ...[0m
[0m[[0m[0minfo[0m] [0m[0m[34m[34m-- Info: /Users/leqisoon/Documents/Coding/zioFxStream/src/main/scala/dev/zio/quickstart/users/PersistentUserRepo.scala:22:19 [0m[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[34m22 |[0m      _ <- ctx.run {[0m
[0m[[0m[0minfo[0m] [0m[0m[34m[34m   |[0m           ^[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[34m   |[0mQuill Query: INSERT INTO "UserTable" ("uuid","name","age") VALUES ($1, $2, $3)[0m
[0m[[0m[0minfo[0m] [0m[0m[34m23 |[0m        quote {[0m
[0m[[0m[0minfo[0m] [0m[0m[34m24 |[0m          query[UserTable].insertValue {[0m
[0m[[0m[0minfo[0m] [0m[0m[34m25 |[0m            lift(UserTable(id, user.name, user.age))[0m
[0m[[0m[0minfo[0m] [0m[0m[34m26 |[0m          }[0m
[0m[[0m[0minfo[0m] [0m[0m[34m27 |[0m        }[0m
[0m[[0m[0minfo[0m] [0m[0m[34m28 |[0m      }[0m
[0m[[0m[0minfo[0m] [0m[0m[34m[34m-- Info: /Users/leqisoon/Documents/Coding/zioFxStream/src/main/scala/dev/zio/quickstart/users/PersistentUserRepo.scala:33:12 [0m[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[34m33 |[0m    ctx.run {[0m
[0m[[0m[0minfo[0m] [0m[0m[34m[34m   |[0m    ^[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[34m   |[0mQuill Query: SELECT p."name" AS name, p."age" AS age FROM "UserTable" p WHERE p."uuid" = $1[0m
[0m[[0m[0minfo[0m] [0m[0m[34m34 |[0m      quote {[0m
[0m[[0m[0minfo[0m] [0m[0m[34m35 |[0m        query[[35mUserTable[0m][0m
[0m[[0m[0minfo[0m] [0m[0m[34m36 |[0m          .filter([36mp[0m => p.uuid == lift(UUID.fromString(id)))[0m
[0m[[0m[0minfo[0m] [0m[0m[34m37 |[0m          .map([36mu[0m => User(u.name, u.age))[0m
[0m[[0m[0minfo[0m] [0m[0m[34m38 |[0m      }[0m
[0m[[0m[0minfo[0m] [0m[0m[34m39 |[0m    }.provide(ZLayer.succeed(ds)).map(_.headOption)[0m
[0m[[0m[0minfo[0m] [0m[0m[34m[34m-- Info: /Users/leqisoon/Documents/Coding/zioFxStream/src/main/scala/dev/zio/quickstart/users/PersistentUserRepo.scala:42:12 [0m[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[34m42 |[0m    ctx.run {[0m
[0m[[0m[0minfo[0m] [0m[0m[34m[34m   |[0m    ^[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[34m   |[0m Quill Query: SELECT u."name" AS name, u."age" AS age FROM "UserTable" u[0m
[0m[[0m[0minfo[0m] [0m[0m[34m43 |[0m      quote {[0m
[0m[[0m[0minfo[0m] [0m[0m[34m44 |[0m        query[[35mUserTable[0m].map([36mu[0m => User(u.name, u.age))[0m
[0m[[0m[0minfo[0m] [0m[0m[34m45 |[0m      }[0m
[0m[[0m[0minfo[0m] [0m[0m[34m46 |[0m    }.provide(ZLayer.succeed(ds))[0m
